package Demo;

import java.util.LinkedList;
import java.util.Random;

public class Processor {

	private LinkedList<Integer> commonRscList = new LinkedList<Integer>();
	private final int LIMIT = 10;
	private final Object lock = new Object();
	private final Random random = new Random();

	public void producer() throws InterruptedException {
		System.out.println("Producer stared ..... ");
		while (true) {
			synchronized (lock) {
				while (commonRscList.size() >= LIMIT) {
					lock.wait();
				}
				commonRscList.add(random.nextInt(10));
				lock.notify();
			}
			//System.out.println("Producer completed");
		}

	}

	public void consumer() throws InterruptedException {
		Thread.sleep(2000);
		System.out.println("Consumer stared ..... ");
		while (true) {
			synchronized (lock) {
				//System.out.print("The size of List is :" + commonRscList.size());
				if (commonRscList.size() < 10) {
					lock.wait();
				}

				int value = commonRscList.removeFirst();
				//System.out.println("  ; and the first value is :" + value+ " list :" + commonRscList);
				lock.notify();
				
				//Thread.sleep(500);
			}
			//System.out.println("Consumer completed");
		}
	}
}
